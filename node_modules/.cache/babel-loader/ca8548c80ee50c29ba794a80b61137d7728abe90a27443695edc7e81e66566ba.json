{"ast":null,"code":"var _jsxFileName = \"/Users/agamswarup/Desktop/week1/Celebal_week1_AgamSwarup/src/form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./form.css\";\n\n// Taking the requied field\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const [formdata, setFormdata] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNo: \"\",\n    countryCode: \"\",\n    country: \"\",\n    city: \"\",\n    panNo: \"\",\n    aadharNo: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [countryCodes, setCountryCodes] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Fetching the country code by API \n  useEffect(() => {\n    const fetchCountryCodes = async () => {\n      try {\n        const response = await fetch(\"https://restcountries.com/v3.1/all\");\n        const data = await response.json();\n        const countryCodes = data.map(country => ({\n          name: country.name.common,\n          code: country.idd.root ? country.idd.root + (country.idd.suffixes ? country.idd.suffixes[0] : \"\") : \"\"\n        }));\n        setCountryCodes(countryCodes);\n      } catch (error) {\n        console.error(\"Error fetching country codes:\", error);\n      }\n    };\n    fetchCountryCodes();\n  }, []);\n\n  //currently API for cities is not working  for countries and cities\n\n  // useEffect(() => {\n  //   fetch(\"https://restcountries.com/v3.1/all\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       const countryNames = data.map((country) => country.name.common).sort();\n  //       setCountries(countryNames);\n  //     })\n  //     .catch((error) => console.error(\"Error fetching countries:\", error));\n  // }, []);\n\n  // const fetchCities = async (country) => {\n  //   try {\n  //     const response = await fetch(\n  //       \"https://countriesnow.space/api/v0.1/countries/cities\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({ country }),\n  //       }\n  //     );\n  //     const data = await response.json();\n  //     setCities(data.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching cities:\", error);\n  //   }\n  // };\n\n  // Data for countries and their cities\n  const data = [{\n    country: \"United States\",\n    cities: [\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\"]\n  }, {\n    country: \"Canada\",\n    cities: [\"Toronto\", \"Vancouver\", \"Montreal\", \"Calgary\", \"Edmonton\", \"Ottawa\", \"Winnipeg\", \"Quebec City\", \"Hamilton\", \"Victoria\"]\n  }, {\n    country: \"Australia\",\n    cities: [\"Sydney\", \"Melbourne\", \"Brisbane\", \"Perth\", \"Adelaide\", \"Gold Coast\", \"Canberra\", \"Newcastle\", \"Wollongong\", \"Hobart\"]\n  }, {\n    country: \"India\",\n    cities: [\"Mumbai\", \"Delhi\", \"Bangalore\", \"Hyderabad\", \"Ahmedabad\", \"Chennai\", \"Kolkata\", \"Surat\", \"Pune\", \"Jaipur\"]\n  }, {\n    country: \"United Kingdom\",\n    cities: [\"London\", \"Birmingham\", \"Manchester\", \"Glasgow\", \"Liverpool\", \"Bristol\", \"Sheffield\", \"Leeds\", \"Edinburgh\", \"Leicester\"]\n  }, {\n    country: \"Germany\",\n    cities: [\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\", \"Stuttgart\", \"Düsseldorf\", \"Dortmund\", \"Essen\", \"Leipzig\"]\n  }, {\n    country: \"France\",\n    cities: [\"Paris\", \"Marseille\", \"Lyon\", \"Toulouse\", \"Nice\", \"Nantes\", \"Strasbourg\", \"Montpellier\", \"Bordeaux\", \"Lille\"]\n  }, {\n    country: \"Japan\",\n    cities: [\"Tokyo\", \"Yokohama\", \"Osaka\", \"Nagoya\", \"Sapporo\", \"Kobe\", \"Kyoto\", \"Fukuoka\", \"Kawasaki\", \"Saitama\"]\n  }, {\n    country: \"Brazil\",\n    cities: [\"São Paulo\", \"Rio de Janeiro\", \"Brasília\", \"Salvador\", \"Fortaleza\", \"Belo Horizonte\", \"Manaus\", \"Curitiba\", \"Recife\", \"Porto Alegre\"]\n  }, {\n    country: \"South Africa\",\n    cities: [\"Johannesburg\", \"Cape Town\", \"Durban\", \"Pretoria\", \"Port Elizabeth\", \"Bloemfontein\", \"Nelspruit\", \"Kimberley\", \"Polokwane\", \"Pietermaritzburg\"]\n  }];\n\n  // Now validate all the required field \n  const validate = () => {\n    const newErrors = {};\n    if (!formdata.firstName) newErrors.firstName = \"First Name is required\";\n    if (!formdata.lastName) newErrors.lastName = \"Last Name is required\";\n    if (!formdata.username) newErrors.username = \"Username is required\";\n    if (!formdata.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formdata.email)) {\n      newErrors.email = \"Enter a valid email\";\n    }\n    if (!formdata.password) {\n      newErrors.password = \"Password is required\";\n    } else if (formdata.password.length <= 8 || !/[A-Z]/.test(formdata.password) || !/[a-z]/.test(formdata.password) || !/\\d/.test(formdata.password) || !/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(formdata.password)) {\n      newErrors.password = \"Password length should be minimum 8 and it  must contain (Upper & lower case , special character)\";\n    }\n    if (!formdata.countryCode) newErrors.countryCode = \"Country Code is required\";\n    if (!formdata.phoneNo) {\n      newErrors.phoneNo = \"Phone No is required\";\n    } else if (!/^\\d{10}$/.test(formdata.phoneNo)) {\n      newErrors.phoneNo = \"Phone No must be 10 digits\";\n    }\n    if (!formdata.country) newErrors.country = \"Country is required\";\n    if (!formdata.city) newErrors.city = \"City is required\";\n    if (!formdata.panNo) {\n      newErrors.panNo = \"PAN No is required\";\n    } else if (!/^[A-Z]{5}\\d{4}[A-Z]$/.test(formdata.panNo)) {\n      newErrors.panNo = \"PAN No must follow the format: 5 letters, 4 numbers, 1 letter\";\n    }\n    if (!formdata.aadharNo) {\n      newErrors.aadharNo = \"Aadhar No is required\";\n    } else if (!/^\\d{12}$/.test(formdata.aadharNo)) {\n      newErrors.aadharNo = \"Aadhar No must be 12 digits\";\n    }\n    return newErrors;\n  };\n  useEffect(() => {\n    if (isSubmitted) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        navigate(\"/success\", {\n          state: formdata\n        });\n      }\n    }\n  }, [errors, isSubmitted, formdata, navigate]);\n  const onChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormdata(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (name === \"country\") {\n      const selectedCountry = data.find(country => country.country === value);\n      setCities(selectedCountry ? selectedCountry.cities : []);\n      setFormdata(prevState => ({\n        ...prevState,\n        city: \"\"\n      }));\n    }\n  };\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      setIsSubmitted(true);\n      navigate(\"/success\", {\n        state: formdata\n      });\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title1\",\n          children: \"Welcome to Celebal's Week 1 Assignment!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title2\",\n          children: \"Please fill out the form below to get started. We're excited to have you here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leftside\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            name: \"firstName\",\n            value: formdata.firstName,\n            onChange: onChangeHandler,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Last Name\",\n            name: \"lastName\",\n            value: formdata.lastName,\n            className: \"input\",\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            name: \"username\",\n            value: formdata.username,\n            className: \"input\",\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            name: \"email\",\n            value: formdata.email,\n            className: \"input\",\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? \"text\" : \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              value: formdata.password,\n              onChange: onChangeHandler,\n              className: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: togglePasswordVisibility,\n              className: \"hide-button\",\n              children: showPassword ? \"Hide\" : \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightside\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"phone-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"text\",\n              placeholder: \"Country Code\",\n              name: \"countryCode\",\n              value: formdata.countryCode,\n              onChange: onChangeHandler,\n              className: \"code\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), countryCodes.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: country.code,\n                children: [country.name, \" (\", country.code, \")\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), errors.countryCode && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.countryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Phone No\",\n              name: \"phoneNo\",\n              className: \"input\",\n              value: formdata.phoneNo,\n              onChange: onChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), errors.phoneNo && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: errors.phoneNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"country\",\n            onChange: onChangeHandler,\n            className: \"input1\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), data.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country.country,\n              children: country.country\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), errors.country && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"city\",\n            value: formdata.city,\n            onChange: onChangeHandler,\n            className: \"input1\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), errors.city && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"PAN No\",\n            name: \"panNo\",\n            value: formdata.panNo,\n            className: \"input\",\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), errors.panNo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.panNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Aadhar No\",\n            name: \"aadharNo\",\n            value: formdata.aadharNo,\n            className: \"input\",\n            onChange: onChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), errors.aadharNo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errors.aadharNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        type: \"submit\",\n        onClick: onSubmitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"p3GoG9vmMT8/bLBmf7TqjDS9GqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Form","_s","formdata","setFormdata","firstName","lastName","username","email","password","phoneNo","countryCode","country","city","panNo","aadharNo","showPassword","setShowPassword","countryCodes","setCountryCodes","cities","setCities","errors","setErrors","navigate","isSubmitted","setIsSubmitted","fetchCountryCodes","response","fetch","data","json","map","name","common","code","idd","root","suffixes","error","console","validate","newErrors","test","length","noErrors","Object","keys","state","onChangeHandler","e","value","target","prevState","selectedCountry","find","onSubmitHandler","preventDefault","validationErrors","togglePasswordVisibility","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","index","_c","$RefreshReg$"],"sources":["/Users/agamswarup/Desktop/week1/Celebal_week1_AgamSwarup/src/form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./form.css\";\n\n// Taking the requied field\nfunction Form() {\n  const [formdata, setFormdata] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    phoneNo: \"\",\n    countryCode: \"\",\n    country: \"\",\n    city: \"\",\n    panNo: \"\",\n    aadharNo: \"\",\n  });\n\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [countryCodes, setCountryCodes] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Fetching the country code by API \n  useEffect(() => {\n    const fetchCountryCodes = async () => {\n      try {\n        const response = await fetch(\"https://restcountries.com/v3.1/all\");\n        const data = await response.json();\n        const countryCodes = data.map((country) => ({\n          name: country.name.common,\n          code: country.idd.root\n            ? country.idd.root +\n              (country.idd.suffixes ? country.idd.suffixes[0] : \"\")\n            : \"\",\n        }));\n        setCountryCodes(countryCodes);\n      } catch (error) {\n        console.error(\"Error fetching country codes:\", error);\n      }\n    };\n\n    fetchCountryCodes();\n  }, []);\n\n\n  //currently API for cities is not working  for countries and cities\n\n  // useEffect(() => {\n  //   fetch(\"https://restcountries.com/v3.1/all\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       const countryNames = data.map((country) => country.name.common).sort();\n  //       setCountries(countryNames);\n  //     })\n  //     .catch((error) => console.error(\"Error fetching countries:\", error));\n  // }, []);\n\n  // const fetchCities = async (country) => {\n  //   try {\n  //     const response = await fetch(\n  //       \"https://countriesnow.space/api/v0.1/countries/cities\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify({ country }),\n  //       }\n  //     );\n  //     const data = await response.json();\n  //     setCities(data.data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching cities:\", error);\n  //   }\n  // };\n\n// Data for countries and their cities\n  const data = [\n    {\n      country: \"United States\",\n      cities: [\n        \"New York\",\n        \"Los Angeles\",\n        \"Chicago\",\n        \"Houston\",\n        \"Phoenix\",\n        \"Philadelphia\",\n        \"San Antonio\",\n        \"San Diego\",\n        \"Dallas\",\n        \"San Jose\",\n      ],\n    },\n    {\n      country: \"Canada\",\n      cities: [\n        \"Toronto\",\n        \"Vancouver\",\n        \"Montreal\",\n        \"Calgary\",\n        \"Edmonton\",\n        \"Ottawa\",\n        \"Winnipeg\",\n        \"Quebec City\",\n        \"Hamilton\",\n        \"Victoria\",\n      ],\n    },\n    {\n      country: \"Australia\",\n      cities: [\n        \"Sydney\",\n        \"Melbourne\",\n        \"Brisbane\",\n        \"Perth\",\n        \"Adelaide\",\n        \"Gold Coast\",\n        \"Canberra\",\n        \"Newcastle\",\n        \"Wollongong\",\n        \"Hobart\",\n      ],\n    },\n    {\n      country: \"India\",\n      cities: [\n        \"Mumbai\",\n        \"Delhi\",\n        \"Bangalore\",\n        \"Hyderabad\",\n        \"Ahmedabad\",\n        \"Chennai\",\n        \"Kolkata\",\n        \"Surat\",\n        \"Pune\",\n        \"Jaipur\",\n      ],\n    },\n    {\n      country: \"United Kingdom\",\n      cities: [\n        \"London\",\n        \"Birmingham\",\n        \"Manchester\",\n        \"Glasgow\",\n        \"Liverpool\",\n        \"Bristol\",\n        \"Sheffield\",\n        \"Leeds\",\n        \"Edinburgh\",\n        \"Leicester\",\n      ],\n    },\n    {\n      country: \"Germany\",\n      cities: [\n        \"Berlin\",\n        \"Hamburg\",\n        \"Munich\",\n        \"Cologne\",\n        \"Frankfurt\",\n        \"Stuttgart\",\n        \"Düsseldorf\",\n        \"Dortmund\",\n        \"Essen\",\n        \"Leipzig\",\n      ],\n    },\n    {\n      country: \"France\",\n      cities: [\n        \"Paris\",\n        \"Marseille\",\n        \"Lyon\",\n        \"Toulouse\",\n        \"Nice\",\n        \"Nantes\",\n        \"Strasbourg\",\n        \"Montpellier\",\n        \"Bordeaux\",\n        \"Lille\",\n      ],\n    },\n    {\n      country: \"Japan\",\n      cities: [\n        \"Tokyo\",\n        \"Yokohama\",\n        \"Osaka\",\n        \"Nagoya\",\n        \"Sapporo\",\n        \"Kobe\",\n        \"Kyoto\",\n        \"Fukuoka\",\n        \"Kawasaki\",\n        \"Saitama\",\n      ],\n    },\n    {\n      country: \"Brazil\",\n      cities: [\n        \"São Paulo\",\n        \"Rio de Janeiro\",\n        \"Brasília\",\n        \"Salvador\",\n        \"Fortaleza\",\n        \"Belo Horizonte\",\n        \"Manaus\",\n        \"Curitiba\",\n        \"Recife\",\n        \"Porto Alegre\",\n      ],\n    },\n    {\n      country: \"South Africa\",\n      cities: [\n        \"Johannesburg\",\n        \"Cape Town\",\n        \"Durban\",\n        \"Pretoria\",\n        \"Port Elizabeth\",\n        \"Bloemfontein\",\n        \"Nelspruit\",\n        \"Kimberley\",\n        \"Polokwane\",\n        \"Pietermaritzburg\",\n      ],\n    },\n  ];\n\n\n  // Now validate all the required field \n  const validate = () => {\n    const newErrors = {};\n    if (!formdata.firstName) newErrors.firstName = \"First Name is required\";\n    if (!formdata.lastName) newErrors.lastName = \"Last Name is required\";\n    if (!formdata.username) newErrors.username = \"Username is required\";\n\n    if (!formdata.email) {newErrors.email = \"Email is required\";\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formdata.email)) {\n      newErrors.email = \"Enter a valid email\";\n    }\n    if (!formdata.password) {newErrors.password = \"Password is required\";\n    } else if (\n      formdata.password.length <= 8 ||\n      !/[A-Z]/.test(formdata.password) ||\n      !/[a-z]/.test(formdata.password) ||\n      !/\\d/.test(formdata.password) ||\n      !/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(formdata.password)\n    ) {\n      newErrors.password =\n        \"Password length should be minimum 8 and it  must contain (Upper & lower case , special character)\";\n    }\n    \n    if (!formdata.countryCode)\n      newErrors.countryCode = \"Country Code is required\";\n    if (!formdata.phoneNo) {\n      newErrors.phoneNo = \"Phone No is required\";\n    } else if (!/^\\d{10}$/.test(formdata.phoneNo)) {\n      newErrors.phoneNo = \"Phone No must be 10 digits\";\n    }\n    if (!formdata.country) newErrors.country = \"Country is required\";\n    if (!formdata.city) newErrors.city = \"City is required\";\n    if (!formdata.panNo) {\n      newErrors.panNo = \"PAN No is required\";\n    } else if (!/^[A-Z]{5}\\d{4}[A-Z]$/.test(formdata.panNo)) {\n      newErrors.panNo =\n        \"PAN No must follow the format: 5 letters, 4 numbers, 1 letter\";\n    }\n    if (!formdata.aadharNo) {\n      newErrors.aadharNo = \"Aadhar No is required\";\n    } else if (!/^\\d{12}$/.test(formdata.aadharNo)) {\n      newErrors.aadharNo = \"Aadhar No must be 12 digits\";\n    }\n    return newErrors;\n  };\n\n  useEffect(() => {\n    if (isSubmitted) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        navigate(\"/success\", { state: formdata });\n      }\n    }\n  }, [errors, isSubmitted, formdata, navigate]);\n\n    const onChangeHandler = (e) => {\n      const { name, value } = e.target;\n      setFormdata((prevState) => ({ ...prevState, [name]: value }));\n      if (name === \"country\") {\n        const selectedCountry = data.find(\n          (country) => country.country === value\n        );\n        setCities(selectedCountry ? selectedCountry.cities : []);\n        setFormdata((prevState) => ({ ...prevState, city: \"\" }));\n      }\n    };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const validationErrors = validate();\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      setIsSubmitted(true);\n      navigate(\"/success\", { state: formdata });\n    }\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <div className=\"app\">\n      <form className=\"form\" onSubmit={onSubmitHandler}>\n        <div className=\"title-div\">\n          <p className=\"title1\">Welcome to Celebal's Week 1 Assignment!</p>\n          <p className=\"title2\">\n            Please fill out the form below to get started. We're excited to have\n            you here!\n          </p>\n        </div>\n        <div className=\"wrap\">\n          <div className=\"leftside\">\n            <input\n              type=\"text\"\n              placeholder=\"First Name\"\n              name=\"firstName\"\n              value={formdata.firstName}\n              onChange={onChangeHandler}\n              className=\"input\"\n            />\n            {errors.firstName && <p className=\"error\">{errors.firstName}</p>}\n\n            <input\n              type=\"text\"\n              placeholder=\"Last Name\"\n              name=\"lastName\"\n              value={formdata.lastName}\n              className=\"input\"\n              onChange={onChangeHandler}\n            />\n            {errors.lastName && <p className=\"error\">{errors.lastName}</p>}\n\n            <input\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={formdata.username}\n              className=\"input\"\n              onChange={onChangeHandler}\n            />\n            {errors.username && <p className=\"error\">{errors.username}</p>}\n\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              value={formdata.email}\n              className=\"input\"\n              onChange={onChangeHandler}\n            />\n            {errors.email && <p className=\"error\">{errors.email}</p>}\n\n            <div className=\"password-container\">\n              <input\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Password\"\n                name=\"password\"\n                value={formdata.password}\n                onChange={onChangeHandler}\n                className=\"password\"\n              />\n              <button\n                type=\"button\"\n                onClick={togglePasswordVisibility}\n                className=\"hide-button\"\n              >\n                {showPassword ? \"Hide\" : \"Show\"}\n              </button>\n            </div>\n            {errors.password && <p className=\"error\">{errors.password}</p>}\n          </div>\n          <div className=\"rightside\">\n            <div className=\"phone-field\">\n              <select\n                type=\"text\"\n                placeholder=\"Country Code\"\n                name=\"countryCode\"\n                value={formdata.countryCode}\n                onChange={onChangeHandler}\n                className=\"code\"\n              >\n                <option value=\"\">Code</option>\n                {countryCodes.map((country, index) => (\n                  <option key={index} value={country.code}>\n                    {country.name} ({country.code})\n                  </option>\n                ))}\n              </select>\n              {errors.countryCode && (\n                <p className=\"error\">{errors.countryCode}</p>\n              )}\n              <input\n                type=\"text\"\n                placeholder=\"Phone No\"\n                name=\"phoneNo\"\n                className=\"input\"\n                value={formdata.phoneNo}\n                onChange={onChangeHandler}\n              />\n\n              {errors.phoneNo && <p className=\"error\">{errors.phoneNo}</p>}\n            </div>\n\n            <select\n              name=\"country\"\n              onChange={onChangeHandler}\n              className=\"input1\"\n            >\n              <option value=\"\">Select Country</option>\n              {data.map((country, index) => (\n                <option key={index} value={country.country}>\n                  {country.country}\n                </option>\n              ))}\n            </select>\n            {errors.country && <p className=\"error\">{errors.country}</p>}\n\n            <select\n              name=\"city\"\n              value={formdata.city}\n              onChange={onChangeHandler}\n              className=\"input1\"\n            >\n              <option value=\"\">Select City</option>\n              {cities.map((city, index) => (\n                <option key={index} value={city}>\n                  {city}\n                </option>\n              ))}\n            </select>\n            {errors.city && <p className=\"error\">{errors.city}</p>}\n\n            <input\n              type=\"text\"\n              placeholder=\"PAN No\"\n              name=\"panNo\"\n              value={formdata.panNo}\n              className=\"input\"\n              onChange={onChangeHandler}\n            />\n            {errors.panNo && <p className=\"error\">{errors.panNo}</p>}\n\n            <input\n              type=\"text\"\n              placeholder=\"Aadhar No\"\n              name=\"aadharNo\"\n              value={formdata.aadharNo}\n              className=\"input\"\n              onChange={onChangeHandler}\n            />\n            {errors.aadharNo && <p className=\"error\">{errors.aadharNo}</p>}\n          </div>\n        </div>\n\n        <button className=\"submit\" type=\"submit\" onClick={onSubmitHandler}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}